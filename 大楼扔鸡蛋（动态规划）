//状态转移方程
for(int i = 2; i <= MAXN; i++){
  for(int j = 2; j <= MAXM; j++){
    for(int k = 1; k < j; k++){
      dp[i][j] = min(dp[i][j], max(dp[i-1][k-1]+1, dp[i][j-k]+1));
    }
  }
}

#define INF 1000000

int n,m,dp[n][m];//N个蛋M层楼

int main(){
  memset(dp,INF,sizeof(dp));
  for(int i = 1;i <= n; i++){
    dp[i][1] = 1;
    dp[i][0] = 0;
  }
  for(int i = 1; i <= m; i++){
    dp[1][i] = i;
  }
  for(int i = 2; i <= n; i++){
    for(int j = 2; j <= m; j++){
      for(int k = 1; k < j; k++){
        dp[i][j] = min(dp[i][j], max(dp[i-1][k-1]+1, dp[i][j-k]+1));
      }
    }
  }  
  return dp[n][m];
}

